// Generated by dojo-bindgen on Mon, 25 Mar 2024 19:30:30 +0000. Do not modify this file manually.
using System;
using System.Threading.Tasks;
using Dojo;
using Dojo.Starknet;
using UnityEngine;
using dojo_bindings;

// System definitions for `zknight-actions.json` contract
public class PlaySystem : MonoBehaviour {
    // The address of this contract
    public string contractAddress;

    
    // Call the `create` system with the specified Account and calldata
    // Returns the transaction hash. Use `WaitForTransaction` to wait for the transaction to be confirmed.
    public async Task<FieldElement> Create(Account account, string world, string player, uint seed, string name) {
        return await account.ExecuteRaw(new dojo.Call[] {
            new dojo.Call{
                to = contractAddress,
                selector = "create",
                calldata = new dojo.FieldElement[] {
                    new FieldElement(world).Inner(),
                    new FieldElement(player).Inner(),
                    new FieldElement(seed).Inner(),
                    new FieldElement(name).Inner()
                }
            }
        });
    }
            

    
    // Call the `play` system with the specified Account and calldata
    // Returns the transaction hash. Use `WaitForTransaction` to wait for the transaction to be confirmed.
    public async Task<FieldElement> Play(Account account, string world, string player, uint x, uint y) {
        return await account.ExecuteRaw(new dojo.Call[] {
            new dojo.Call{
                to = contractAddress,
                selector = "play",
                calldata = new dojo.FieldElement[] {
                    new FieldElement(world).Inner(),
                    new FieldElement(player).Inner(),
                    new FieldElement(x).Inner(),
                    new FieldElement(y).Inner()
                }
            }
        });
    }
            

    
    // Call the `spawn` system with the specified Account and calldata
    // Returns the transaction hash. Use `WaitForTransaction` to wait for the transaction to be confirmed.
    public async Task<FieldElement> Spawn(Account account, string world, string player) {
        return await account.ExecuteRaw(new dojo.Call[] {
            new dojo.Call{
                to = contractAddress,
                selector = "spawn",
                calldata = new dojo.FieldElement[] {
                    new FieldElement(world).Inner(),
                    new FieldElement(player).Inner()
                }
            }
        });
    }
            
}
        